name: deploy

on:
  push:
    branches-ignore:
      - 'dependabot/**'
    paths-ignore:
      - '**.md'

env:
  ACCOUNT_NAME: belsrcdemo
  SOURCE_DIR: dist/
  DEST_DIR: resources/action-playground

jobs:
  # Run ESLint over the code base
  # lint:

  # Run all of the unit tests
  # test:

  deploy:
    # needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Install Yarn
        run: npm i -g yarn

      - name: Install Packages
        run: yarn install

      - name: Run Build
        run: yarn run build

      - name: Extract Branch Name
        shell: bash
        run: |
          echo ${GITHUB_REF#refs/heads/}
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS  }}

      # https://docs.microsoft.com/en-us/cli/azure/storage/blob?view=azure-cli-latest#az-storage-blob-upload-batch
      # az storage blob upload-batch --account-name ${env.ACCOUNT_NAME} -s ${env.SOURCE_DIR} -d ${env.DEST_DIR} --dryrun
      # az storage blob upload-batch --account-name ${{ env.ACCOUNT_NAME }} -s ${{ env.SOURCE_DIR }} -d ${{ env.DEST_DIR }} --dryrun
      # az storage blob upload-batch --account-name belsrcdemo -s dist/ -d resources/action-playground/master --dryrun
      # DEST_DIR: 'resources/action-playground/${{ steps.extract_branch.outputs.branch }}'
      - name: Azure CLI Copy Artifacts
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            echo '${{ env.ACCOUNT_NAME }}'
            echo '${{ env.SOURCE_DIR }}'
            echo '${{ env.DEST_DIR }}'
            echo '${{ env.DEST_DIR }}/${{ steps.extract_branch.outputs.branch }}'
            az storage blob upload-batch --account-name ${{ env.ACCOUNT_NAME }} -s ${{ env.SOURCE_DIR }} -d ${{ env.DEST_DIR }} --dryrun
